@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Common;

@model IEnumerable<(UserViewModel, string[])>
@{
    ViewBag.Title = "قائمة المستخدمين";
}
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />
@section breadcrumb{
    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">الرئيسية</a></li>
}
<div class="row">
    <h2 class="col-8 col-sm-10">المستخدمون</h2>
    <div class="col-4 col-sm-2"><a class="btn btn-outline-info btn-block" href="@Url.Action("Register","Account")">مستخدم جديد</a></div>
</div>


<table class="table table-hover">
    <thead>
        <tr>
            <th>اسم المستخدم</th>
            <th>البريد الإلكتروني</th>
            <th>الاسم كاملا</th>
            <th>الدور</th>
            <th>الحالة</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td>@item.Item1.UserName</td>
                <td>@item.Item1.Email</td>
                <td>@item.Item1.FullName</td>
                <td>@(item.Item2 != null ? string.Join(" ،", item.Item2) : "")</td>
                <td>@(item.Item1.IsEnabled?"مفعل":"معطل")</td>
                <td>
                    <a href="@(Url.Action("Register",null,new { Id = item.Item1.Id }))" class="btn btn-primary">تعديل</a>
                    @if (User.Identity.Name != item.Item1.UserName)
                    {
                        <span>|</span><button type="button" data-id="@item.Item1.Id" class="change-status @(item.Item1.IsEnabled?"btn btn-warning":"btn btn-success")"> @(item.Item1.IsEnabled?"تعطيل":"تفعيل")</button>
                        <span>|</span>
                        <button type="button" class="btn btn-danger delete" data-id="@item.Item1.Id"> حذف</button>
                    }



                </td>
            </tr>
        }
    </tbody>
</table>
<ul>
</ul>
<br />
<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }),
    new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
    {
        DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        UlElementClasses = new[] { "pagination", "p-0" },
        PageClasses = new[] { "page-link" },
        //Display = X.PagedList.Mvc.Common.PagedListDisplayMode.IfNeeded,
        ItemSliceAndTotalFormat = "عدد المستخدمين {2}"

    })
<div class="modal" id="delete">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Delete" id="deleteForm">
                @Html.Hidden("Id")
                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">حذف مستخدم</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    هل أنت متأكد من حذف المستخدم!.
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger">نعم</button>&nbsp;
                    <button type="button" class="btn btn-light" data-dismiss="modal">لا</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section scripts{
    <script>
    $(document).ready(function () {
        $('ul.pagination > li.disabled > a').addClass('page-link');
        $(".delete").click(function (event) {
            event.preventDefault();
            $("#Id").val($(this).data("id"));
            $("#delete").modal('show');
        });
        $(".change-status").click(function () {
            var userId = $(this).data('id');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ChangeStatus")',
                    data: {userId: userId},
                    success: function (response) {
                         if (response) {
                             alert(response);
                            return;
                        }
                        location.reload();
                    },
                    error: function (x) {
                        alert(x.data);
                    }
                });

            });
    });
    </script>

}